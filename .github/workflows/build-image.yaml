name: Build Docker image

on: pull_request

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      FULL_IMAGE_TAG: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Set Tag
        id: tag
        run: |
          export CI_COMMIT_SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)
          echo $CI_COMMIT_SHORT_SHA;
          echo ${GITHUB_REF##*/};
          echo $version_pattern;
          if [[ ${GITHUB_REF} =~ $version_pattern ]]; then
            echo "::set-output name=tag::${GITHUB_REF##*/}"
          elif [ ${GITHUB_REF##*/} = "main" ]; then
            echo "::set-output name=tag::stg-$CI_COMMIT_SHORT_SHA"
          else
            echo "::set-output name=tag::$CI_COMMIT_SHORT_SHA"
          fi
        env:
          version_pattern: "tags\\/v[0-9]+\\.[0-9]+\\.[0-9]+"


  build-image:
    runs-on: ubuntu-latest
    needs: prepare
    environment:
        name: dev
    env:
      IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}

    steps:
      - name: Echo tag
        id: echotag
        env:
          IMAGE_TAG: ${{ needs.prepare.outputs.FULL_IMAGE_TAG }}
        run: |
          echo "Building an image with the following tag:"
          echo $IMAGE_TAG

      - name: Checkout
        uses: actions/checkout@v2

#      - name: Login to GCP
#        uses: google-github-actions/setup-gcloud@v0
#        with:
#          project_id: ${{ secrets.GCP_PROJECT_ID }}
#          service_account_email: ${{ secrets.GCP_EMAIL }}
#          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
#
#      - name: Configure Docker
#        run: gcloud auth configure-docker --quiet
#
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Build Docker image
#        run: docker build . -t $IMAGE_NAME
#
#      - name: Test Docker image
#        run: docker run $IMAGE_NAME sh -c "go test -v"
#
#      - name: Push Docker image
#        run: docker push $IMAGE_NAME
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}

      - name: Build and push to GCR v2
        id: build-push
        env:
          GCR_REGISTRY: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}
          GCR_REPOSITORY: jira-bugzilla-integration
          IMAGE_TAG: ${{ needs.prepare.outputs.FULL_IMAGE_TAG }}
        run: |
          printf '{\n    "commit": "%s",\n    "version": "%s",\n    "image_tag": "%s",\n    "source": "%s",\n    "build": "%s"\n}\n' \
            "$GITHUB_SHA" \
            "$GITHUB_REF" \
            "$IMAGE_TAG" \
            "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY" \
            "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" > ./version.json
          docker build --file infra/Dockerfile -t $GCR_REGISTRY/$GCR_REPOSITORY:$IMAGE_TAG .
          docker image tag $GCR_REGISTRY/$GCR_REPOSITORY:$IMAGE_TAG $GCR_REGISTRY/$GCR_REPOSITORY:latest
          docker push $GCR_REGISTRY/$GCR_REPOSITORY:$IMAGE_TAG
          docker push $GCR_REGISTRY/$GCR_REPOSITORY:latest
#          echo ${{ secrets.GCP_CREDENTIALS }} | docker login -u _json_key --password-stdin https://gcr.io
